#!aratar 0.1

# A complex number type, requires Num trait
Complex<NUM> {
    # Real part of a complex number
    real: NUM
    # Imaginary part of a complex number
    imag: NUM
} Complex<NUM>

# Constructor for Complex
Complex<NUM>(self, real NUM, imag NUM) -> Complex<NUM> {
    Complex { real, imag }
} Complex<NUM>()

# Comparison on boolean
Complex=(self, other Complex) -> Bool {
    (self.real = other.real and self.imag = other.imag)
} Complex=()
